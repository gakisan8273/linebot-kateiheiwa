useDotenv: true
service: linebot-kateiheiwa
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: ${env:AWS_REGION}
  stage: ${opt:stage, self:custom.defaultStage}
  layers:
    - { Ref: PythonRequirementsLambdaLayer }
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:*
          Resource:
            - arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/*
        - Effect: 'Allow'
          Action:
            - lambda:InvokeFunction
          Resource:
            - "*"

functions:
  # UTCで8時→JPで17時 平日の仕事終わりに定期的にメッセージを送る
  good_work:
    handler: good_work.handler
    events:
      - schedule: cron(40 8 ? * MON-FRI *)
    environment:
      LINE_ACCESS_TOKEN: ${env:LINE_ACCESS_TOKEN, ""}
      LINE_CHANNEL_SECRET: ${env:LINE_CHANNEL_SECRET, ""}
  # UTCで15時→JPで24時 日曜24時にスコアを0にリセットする
  reset:
    handler: reset.handler
    events:
      - schedule: cron(0 15 ? * SUN *)
    environment:
      LINE_ACCESS_TOKEN: ${env:LINE_ACCESS_TOKEN, ""}
      LINE_CHANNEL_SECRET: ${env:LINE_CHANNEL_SECRET, ""}
  webhook:
    handler: webhook.handler
    environment:
      LINE_ACCESS_TOKEN: ${env:LINE_ACCESS_TOKEN, ""}
      LINE_CHANNEL_SECRET: ${env:LINE_CHANNEL_SECRET, ""}
      ENV: ${self:provider.stage}
    events:
      - httpApi:
          path: /
          method: post

plugins:
  - serverless-python-requirements

custom:
  defaultStage: dev
  pythonRequirements:
    dockerizePip: non-linux
    slim: true # __pycache__とかいらないものを消してくれる。
    zip: true  # scipyとか大きいモジュールをzip化してくれる。
    useDownloadCache: true # デプロイ時、pipライブラリをキャッシュして使う。
    useStaticCache: true
    layer:
      name: ${self:provider.stage}-requirementLayer
      description: Python requirements lambda layer
      compatibleRuntimes:
        - python3.8

resources:
  Resources:
    TiredScores:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: tired-scores
    GroupTalk:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: group-talk
